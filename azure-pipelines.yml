# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

#pool:
#  vmImage: ubuntu-latest
jobs:
  - job: GitGuardianShield
    pool:
      vmImage: 'ubuntu-latest'
    container: gitguardian/ggshield:latest
    steps:
      - script: ggshield secret scan ci
        env:
          GITGUARDIAN_API_KEY: $(GITGUARDIAN_API_KEY)
#jobs:
  - job: Main
    dependsOn: GitGuardianShield
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      # Prepare Analysis Configuration task
      - task: SonarQubePrepare@6
        inputs:
          SonarQube: 'http://localhost:9000'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'pipelines-java'

      # Run Code Analysis task
      - task: SonarQubeAnalyze@6
        inputs:
          jdkversion: 'JAVA_HOME_17_X64'

      # Publish Quality Gate Result task
      - task: SonarQubePublish@6
        inputs:
          pollingTimeoutSec: '300'